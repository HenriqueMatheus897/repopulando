/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.EventHandler;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.LineNumberReader;
import java.io.PrintWriter;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.input.MouseButton;
import javafx.scene.layout.Background;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;





    
public class TelaPrincipal extends javax.swing.JFrame {




    private  static String nome,data,hora,valor,um,dois,tres,quatro,cinco,seis,sete,oito,nove,dez,onze,dose,treze,quatoze,quise,deseis,desete,desoito,desenove,vinte;
    
    public TelaPrincipal() {
        initComponents();
        
        jButton3.setBackground(new java.awt.Color(0,0,0,0));
        jButton4.setBackground(new java.awt.Color(0,0,0,0));
       jButtonNegocio.setBackground(new java.awt.Color(0,0,0,0));
        jToggleButton1.setBackground(new java.awt.Color(0,0,0,0));
       jButton5.setBackground(new java.awt.Color(0,0,0,0));
       jButton8.setBackground(new java.awt.Color(0,0,0,0));
      // jButton1.setBackground(new java.awt.Color(0,0,0,0));
       //jButton6.setBackground(new java.awt.Color(0,0,0,0));

    }
    private void faturamentoDia()
    {
     // fuçao para caucular o subtotal 
        float suma = 0;
        for( int i = 0; i < jTable1.getRowCount(); i++)
        {
            float renglon;
            renglon = Float.parseFloat(jTable1.getValueAt(i, 0).toString());
            
            suma = suma + renglon;
            
        }

         txT_Faturamento.setText(String.valueOf("R$"+suma));
    }
    
    
    private void calcular()
    {
        
     // fuçao para caucular o subtotal 
        float suma = 0;
        for( int i = 0; i < jTable4.getRowCount(); i++)
        {
            float renglon;
            renglon = Float.parseFloat(jTable4.getValueAt(i, 0).toString());
            
            suma = suma + renglon;
            
        }

         //txT_Faturamento.setText(String.valueOf("R$"+suma));
        // jTextField2.setText(String.valueOf(suma));
  
    }
    
       private void calcularBotao()
    {
        
     // fuçao para caucular o subtotal 
        float suma = 0;
        for( int i = 0; i < jTable3.getRowCount(); i++)
        {
            float renglon;
            renglon = Float.parseFloat(jTable3.getValueAt(i, 0).toString());
            
            suma = suma + renglon;
            
        }
         //jLabel17
         jTextField1.setText(String.valueOf("R$"+suma));
         //jLabel7.setText(String.valueOf(suma));
         //jTextField2.setText(String.valueOf(suma));
  
    }
    private JFCadrastro Chamar_Fornecedor = new JFCadrastro();
    private PaginaUsuario Chamar_Fornecedor2 = new PaginaUsuario();
    private TelaRelatorioCistema Chamar_Fornecedor3 = new TelaRelatorioCistema();
    private frm_GuardarDados Chamar_Fornecedor4 = new frm_GuardarDados();
    private ListaVIP Chamar_Fornecedor5 = new ListaVIP();
    private PerfilDoCliente Chamar_Fornecedor6 = new PerfilDoCliente();
    private TelaRelatorioDePedidos Chamar_Fornecedor7 = new TelaRelatorioDePedidos();
    //private jFrame1 Chamar_Fornecedor6 = new jFrame1();
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jldata = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuCadastro = new javax.swing.JMenu();
        jMenuItemCadUsuario = new javax.swing.JMenuItem();
        jMenuRelatorios = new javax.swing.JMenu();
        jMenuFerramentas = new javax.swing.JMenu();
        jMenuItemTelaBemVindo = new javax.swing.JMenuItem();
        jMenuSair = new javax.swing.JMenu();
        jMenuItemSair = new javax.swing.JMenuItem();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jlhora = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        TxT_Pedididos = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jFrame1 = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabelaP = new javax.swing.JTable();
        txT_Total = new javax.swing.JLabel();
        txT_Faturamento = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jTextpro = new javax.swing.JTextField();
        jButtonNegocio = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton12 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jldata.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jldata.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jMenuCadastro.setText("Cadratro");

        jMenuItemCadUsuario.setText("Usuarios");
        jMenuItemCadUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCadUsuarioActionPerformed(evt);
            }
        });
        jMenuCadastro.add(jMenuItemCadUsuario);

        jMenuBar1.add(jMenuCadastro);

        jMenuRelatorios.setText("Relatorios");
        jMenuBar1.add(jMenuRelatorios);

        jMenuFerramentas.setText("Ferramentas");

        jMenuItemTelaBemVindo.setText("Tela de Bem vindo");
        jMenuItemTelaBemVindo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTelaBemVindoActionPerformed(evt);
            }
        });
        jMenuFerramentas.add(jMenuItemTelaBemVindo);

        jMenuBar1.add(jMenuFerramentas);

        jMenuSair.setText("Sair");

        jMenuItemSair.setText("Sair");
        jMenuSair.add(jMenuItemSair);

        jMenuBar1.add(jMenuSair);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Pesquisar por Cliente / Buscar");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Adicionar");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Meu negocio");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Ver Lista Completa");

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setText("?");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Estatisticas");

        jLabel11.setText("Ajuda");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jlhora.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlhora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setText("PedidosFeitos ");
        jPanel2.add(jLabel13);

        TxT_Pedididos.setText("jLabel1");
        jPanel2.add(TxT_Pedididos);

        jButton9.setText("relatorio");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("relatorio");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jFrame1.getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(84, 93, 106));
        setExtendedState(MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jButton8.setToolTipText("Relatórios");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(110, 380, 90, 80);

        jtTabelaP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "3", "4", "5", "6", "7", "Título 8", "Título 9", "Título 10", "Título 11", "Título 12", "Título 13", "codigo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTabelaP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTabelaPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtTabelaP);
        if (jtTabelaP.getColumnModel().getColumnCount() > 0) {
            jtTabelaP.getColumnModel().getColumn(0).setMinWidth(100);
            jtTabelaP.getColumnModel().getColumn(0).setPreferredWidth(100);
            jtTabelaP.getColumnModel().getColumn(0).setMaxWidth(100);
            jtTabelaP.getColumnModel().getColumn(2).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(2).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(2).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(3).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(3).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(3).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(4).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(4).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(4).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(5).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(5).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(5).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(6).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(6).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(6).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(7).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(7).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(7).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(8).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(8).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(8).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(9).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(9).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(9).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(10).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(10).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(10).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(11).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(11).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(11).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(12).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(12).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(12).setMaxWidth(0);
            jtTabelaP.getColumnModel().getColumn(13).setMinWidth(0);
            jtTabelaP.getColumnModel().getColumn(13).setPreferredWidth(0);
            jtTabelaP.getColumnModel().getColumn(13).setMaxWidth(0);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(460, 350, 570, 280);

        txT_Total.setText("0");
        getContentPane().add(txT_Total);
        txT_Total.setBounds(650, 110, 80, 40);

        txT_Faturamento.setText("0");
        getContentPane().add(txT_Faturamento);
        txT_Faturamento.setBounds(790, 120, 90, 14);

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setToolTipText("");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(960, 270, 60, 60);

        jTextpro.setBackground(new java.awt.Color(83, 93, 106));
        jTextpro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextpro.setForeground(java.awt.Color.white);
        jTextpro.setBorder(null);
        jTextpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextproActionPerformed(evt);
            }
        });
        jTextpro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextproKeyPressed(evt);
            }
        });
        getContentPane().add(jTextpro);
        jTextpro.setBounds(480, 280, 450, 30);

        jButtonNegocio.setToolTipText("Configurações");
        jButtonNegocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNegocioActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonNegocio);
        jButtonNegocio.setBounds(1230, 600, 90, 70);

        jButton4.setToolTipText("Lista De Clientes");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(120, 280, 80, 80);

        jButton3.setForeground(new java.awt.Color(153, 255, 255));
        jButton3.setToolTipText("Adicionar Novo Cliente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(120, 180, 80, 80);

        jToggleButton1.setToolTipText("Meus Produtos");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton1);
        jToggleButton1.setBounds(110, 480, 90, 80);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/fundinho.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1320, -100, 120, 1400);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable5);

        getContentPane().add(jScrollPane6);
        jScrollPane6.setBounds(20, 690, 0, 0);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(1330, 0, 0, 0);

        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(940, 180, 1, 1);

        jLabel20.setText("0");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(500, 120, 100, 30);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable2);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(0, 700, 0, 0);
        getContentPane().add(jLabel17);
        jLabel17.setBounds(770, 34, 0, 0);

        jTextField1.setBorder(null);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(610, 210, 0, 0);

        jTextField2.setBorder(null);
        getContentPane().add(jTextField2);
        jTextField2.setBounds(1060, 110, 0, 0);

        jTextField4.setBorder(null);
        getContentPane().add(jTextField4);
        jTextField4.setBounds(1100, 140, 0, 0);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane7.setViewportView(jTable6);

        getContentPane().add(jScrollPane7);
        jScrollPane7.setBounds(932, 210, 0, 0);

        jTextField3.setBorder(null);
        getContentPane().add(jTextField3);
        jTextField3.setBounds(1100, 146, 0, 14);
        getContentPane().add(jLabel19);
        jLabel19.setBounds(310, 140, 60, 30);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable3);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(280, 370, 10, 0);
        getContentPane().add(jLabel18);
        jLabel18.setBounds(350, 140, 0, 0);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane5.setViewportView(jTable4);

        getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(210, 562, 10, 0);

        jButton12.setText("Atualizar");
        jButton12.setBorder(null);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton12);
        jButton12.setBounds(780, 145, 50, 30);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/__TELA PRINCIPAL.png"))); // NOI18N
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel1MouseMoved(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-200, 0, 1730, 680);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/fundinho.jpg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(120, 670, 1400, 1220);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/fundinho.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 670, 120, 1220);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/fundinho.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(-10, -6, 40, 690);

        setSize(new java.awt.Dimension(1348, 738));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemTelaBemVindoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTelaBemVindoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemTelaBemVindoActionPerformed

    private void jMenuItemCadUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCadUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemCadUsuarioActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (!Chamar_Fornecedor.isVisible()) { Chamar_Fornecedor.setVisible(true); }
      //  JFCadrastro Tela = new JFCadrastro();
      //  Tela.setVisible(rootPaneCheckingEnabled);  
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (!Chamar_Fornecedor2.isVisible()) { Chamar_Fornecedor2.setVisible(true); } 
      //  PaginaUsuario Tela = new PaginaUsuario();
      //  Tela.setVisible(rootPaneCheckingEnabled);   
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
//total de pedidos 

        




//Notificaçao de aniversario
          try {
             String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/texto.txt");
        File file = new File(filePath);
            
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
           String[] columnsName = firstLine.split(",");
         //   DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
          //  model.setColumnIdentifiers(columnsName);

            Object[] tableLines = br.lines().toArray();
            //model.addRow(tableLines);
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataMax = line.split("/");
                //String[] dataRow = line.split(";");
           //     model.addRow(dataRow);
                
   
               
        //metodo para percorrer o array
        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM");
        
        jLabel9.setText(formato.format(dataSistema));
        String DataHoje = jLabel9.getText();
        //String quebrador ="";
        int posisao = 0;
                for (int j = 0; j < dataMax.length; j++) {
                    String  linha = dataMax[posisao];
                    //metodo para aparecer so o valor
                    if(linha.toLowerCase().contains(DataHoje.toLowerCase()) == true){
                        System.out.println(linha+"Contem a data de hoje"); 
                        
                       // String linha1 = dataMax[posisao -13];
                  //  JOptionPane.showMessageDialog(null, "tem um clinte que faz aniversario hoje");
                                               
                    linha.trim();
                    
                   // DefaultTableModel val = (DefaultTableModel) jTable2.getModel();
                    //val.addRow(new String[]{linha});
                    
                    
                                               
                                               
                                            //    RegistroDeCompra registroDeCompra = new RegistroDeCompra();
                                             //   registroDeCompra.setAnalise(linha);
                                                
                                              //   try {
        //    JOptionPane.showMessageDialog(null, registroDeCompra.sauvado());  //Atençao
            // jTextField1.setText("");
            // texREs.setText("");
            
            
            /*   t.start();
            prgs.setValue(prgs.getValue()+10);
            
            t.stop(); */
       // } catch (IOException ex) {
       //     Logger.getLogger(PerfilDoCliente.class.getName()).log(Level.SEVERE, null, ex);
      //  }
                        
                                                 
                                                 
         
                    
                   // DefaultTableModel val = (DefaultTableModel) jTable2.getModel();
                  //  val.addRow(new String[]{resutado});
                    
                                               
                    }else{
                     System.out.println(linha+"Nã Contem a data de hoje");
                    }
                    
                    
                    
                    posisao ++;
                    System.out.println(""+posisao);
                    System.out.println(linha);
                }
        
                
               
            }
        } catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        } 
       
        
        
        
        
        
//Apga as o arquivo txt
                                               
                                               File filee = new File("C:\\Arquivos de Programas/Gestão de Clientes/DadosObitidosDia.txt");

                                                if ( filee.exists()) {
                                                       filee.delete();
                                                   try {
                                                       FileWriter fw = new FileWriter( "C:\\Arquivos de Programas/Gestão de Clientes/DadosObitidosDia.txt" );
                                                   } catch (IOException ex) {
                                                       Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                                                   }
                                                   //Cria utro arquivo txt  
                                                     try {
                                                    filee.createNewFile();
                                                    PrintWriter pw = new PrintWriter(filee);
                                                     pw.println("valores,");
                                                      pw.close();
                                                    } catch (IOException e) {
                                                	e.printStackTrace();
                                                     } 
                                                }

        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        
        jTextField2.setText(formato.format(dataSistema));
        
        try{
             String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/ValorTotal.txt");
        File file = new File(filePath);
            
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setColumnIdentifiers(columnsName);
            
              
            Object[] tableLines = br.lines().toArray();
            //model.addRow(tableLines);
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(";");
            //    integer[] valoresint = new integer(dataRow.length);
                model.addRow(dataRow);
             }
            
        }catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
                
                
        
        
        try {
             String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/ValorTotal.txt");
        File file = new File(filePath);
            
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
        //    DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
          //  model.setColumnIdentifiers(columnsName);
            
              
            Object[] tableLines = br.lines().toArray();
            //model.addRow(tableLines);
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(";");
              //  model.addRow(dataRow);
              
                int um = Integer.parseInt(dataRow[0]);
                int dois = Integer.parseInt(dataRow[1]);
                int tres = Integer.parseInt(dataRow[2]);
                int quatro = Integer.parseInt(dataRow[3]);
                int cinco = Integer.parseInt(dataRow[4]);
                int seis= Integer.parseInt(dataRow[5]);
                int sete = Integer.parseInt(dataRow[6]);
               int oito = Integer.parseInt(dataRow[7]);
                int nove = Integer.parseInt(dataRow[8]);
                int dez = Integer.parseInt(dataRow[9]);
                int onze = Integer.parseInt(dataRow[10]);
                int doze = Integer.parseInt(dataRow[11]);
                int treze = Integer.parseInt(dataRow[12]);
                int quatoze = Integer.parseInt(dataRow[13]);
                int quise= Integer.parseInt(dataRow[14]);
                int deseseis = Integer.parseInt(dataRow[15]);
               int desesete = Integer.parseInt(dataRow[16]);
                int desoto = Integer.parseInt(dataRow[17]);
                int desenove = Integer.parseInt(dataRow[18]);
                 int vinte = Integer.parseInt(dataRow[19]); 
                 
                 int[] MeuArray = new int[10];
                
                if(um != 0){
                //NAO TEM ZERO
                MeuArray[0] = um;                   
                }else{} 
                
                if(dois != 0){
                //NAO TEM ZERO
                MeuArray[1] = dois;                   
                }else{}
                
                if(tres != 0){
                //NAO TEM ZERO
                MeuArray[2] = tres;                   
                }else{} 
                
                if(quatro != 0){
                //NAO TEM ZERO
                MeuArray[1] = quatro;                   
                }else{}
                
                if(cinco != 0){
                //NAO TEM ZERO
                MeuArray[1] = cinco;                   
                }else{}
                
                if(seis != 0){
                //NAO TEM ZERO
                MeuArray[0] = seis;                   
                }else{} 
                
                if(sete != 0){
                //NAO TEM ZERO
                MeuArray[1] = sete;                   
                }else{}
                
                if(oito != 0){
                //NAO TEM ZERO
                MeuArray[2] = oito;                   
                }else{} 
                
                if(nove != 0){
                //NAO TEM ZERO
                MeuArray[1] = nove;                   
                }else{}
                
                if(dez != 0){
                //NAO TEM ZERO
                MeuArray[1] = dez;                   
                }else{}
                
                
                 if(onze != 0){
                //NAO TEM ZERO
                MeuArray[0] = onze;                   
                }else{} 
                
                if(doze != 0){
                //NAO TEM ZERO
                MeuArray[1] = doze;                   
                }else{}
                
                if(treze != 0){
                //NAO TEM ZERO
                MeuArray[2] = treze;                   
                }else{} 
                
                if(quatoze != 0){
                //NAO TEM ZERO
                MeuArray[1] = quatoze;                   
                }else{}
                
                if(quise != 0){
                //NAO TEM ZERO
                MeuArray[1] = quise;                   
                }else{}
                
                if(deseseis != 0){
                //NAO TEM ZERO
                MeuArray[0] = deseseis;                   
                }else{} 
                
                if(desesete != 0){
                //NAO TEM ZERO
                MeuArray[1] = desesete;                   
                }else{}
                
                if(desoto != 0){
                //NAO TEM ZERO
                MeuArray[2] = desoto;                   
                }else{} 
                
                if(desenove != 0){
                //NAO TEM ZERO
                MeuArray[1] = desenove;                   
                }else{}
                
                if(vinte != 0){
                //NAO TEM ZERO
                MeuArray[1] = vinte;                   
                }else{}
                
                 int Contador = 0;
               for (int j = 0; j < MeuArray.length; j ++){
                if (dataRow[j] != null)
                Contador ++;
              //  jLabel16.setText(""+Contador);
                //jTextField1.setText(""+contador);
                
                System.out.print(""+Contador);
               }
            }
            
        } catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        
 
        
        
        try {
             String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/ValorTotal.txt");
        File file = new File(filePath);
            
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
        //    DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
          //  model.setColumnIdentifiers(columnsName);
            
              
            Object[] tableLines = br.lines().toArray();
            //model.addRow(tableLines);
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(";");
              //  model.addRow(dataRow);
              
                int um = Integer.parseInt(dataRow[0]);
                int dois = Integer.parseInt(dataRow[1]);
                int tres = Integer.parseInt(dataRow[2]);
                int quatro = Integer.parseInt(dataRow[3]);
                int cinco = Integer.parseInt(dataRow[4]);
                int seis= Integer.parseInt(dataRow[5]);
                int sete = Integer.parseInt(dataRow[6]);
               int oito = Integer.parseInt(dataRow[7]);
                int nove = Integer.parseInt(dataRow[8]);
                int dez = Integer.parseInt(dataRow[9]);
                int onze = Integer.parseInt(dataRow[10]);
                int doze = Integer.parseInt(dataRow[11]);
                int treze = Integer.parseInt(dataRow[12]);
                int quatoze = Integer.parseInt(dataRow[13]);
                int quise= Integer.parseInt(dataRow[14]);
                int deseseis = Integer.parseInt(dataRow[15]);
               int desesete = Integer.parseInt(dataRow[16]);
                int desoto = Integer.parseInt(dataRow[17]);
                int desenove = Integer.parseInt(dataRow[18]);
                 int vinte = Integer.parseInt(dataRow[19]); 
               
                 
         
          int total = um +dois+ tres + quatro + cinco + seis + sete + oito +
                  nove + dez + onze + doze  + treze + quatoze + quise +deseseis +desesete + desoto +desenove + vinte;
            //     System.out.print(um);
           //     txT_Faturamento.setText("R$"+total);
               
            /* int soma = 0;

             for (int i=0; i < 19; i++) {
             soma+=dataRow[i];
             } */
                
                
                
           


             /*  String um =  jTextField8.getText();
               String dois = jTextField9.getText();
               String tres = jTextField10.getText();
               String quatro = jTextField11.getText();
               
               int UM = Integer.parseInt(um);
               int DOIS = Integer.parseInt(dois);
               int TRES =  Integer.parseInt(tres);
               int QUATRO =  Integer.parseInt(quatro);
               int RESUTADO = UM * DOIS;
               System.out.print(RESUTADO);
               jTextField12.setText(""+RESUTADO); */
             
            }
            
        } catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        } 
        /* int resposta;
   
          resposta = JOptionPane.showConfirmDialog(null, "quer enviar mensagem para o aniiversariante?");
        if(resposta == JOptionPane.YES_OPTION){
        URI link = null;  
       try {
      link = new URI("https://api.whatsapp.com/send?phone=5583998692594&text=é+a+hora+da+putaria");
     // Desktop.getDesktop().browse(link);
    } catch (URISyntaxException ex) {
   Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
   }
   try {
  Desktop.getDesktop().browse(link);
  } catch (IOException ex) {
  Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
    }
  } */
        
        
         //TOTAL DE pedidos
       LineNumberReader lnr = null;
        try {
            String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/textando.txt");
            File file = new File(filePath);
            lnr = new LineNumberReader(new FileReader(file));
            try {
                lnr.skip(Long.MAX_VALUE);
            } catch (IOException ex) {
                Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
            }
            int retorno = lnr.getLineNumber();
            String rere = Integer.toString(retorno);
            //jLabel16.setText(rere);
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                lnr.close();
            } catch (IOException ex) {
                Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        //VALOR ARRECADADO
        try {
			//abre o arquivo
			FileReader fr = new FileReader("C:\\Arquivos de Programas/Gestão de Clientes/textando.txt");
			BufferedReader br = new BufferedReader(fr);
			String temp;
			//A cada interação, é uma linha do arquivo e atribui-a a temp
			while ((temp = br.readLine()) != null)
			{
				//Aqui gera a sua "lista". No caso, imprimi cada linha na tela.
				String[] a = temp.split(";");
				int i=0;
				for(String each : a)
				{
					/*if(i==0){
						nome=each;							
						System.out.println(nome);
					}*/
						/*if(i==1){
							data=each;
							//System.out.println(data);
                                                        jLabel9.setText(data);
						} 
						if(i==2){
							hora=each;
							i=-1;
							//System.out.println(hora);
                                                        txtMelhorHora.setText(hora);
                                                        
                                                        }*/
                                                if(i==12){
                                                        valor=each;
                                                        i=-1;
                                                        
                                                        
                                                      // System.out.print(valor);
                                                       
                                                      
                                                        
                                                
                                                }
                                                        
						i++;
					}						
				}
		}
		catch (FileNotFoundException el)
		{
			System.out.println("Arquivo não Encontrado!");
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
        


        //PEDIDOS FEITOS
        LineNumberReader lnrR = null;
        try {
            String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/texto.txt");
            File file = new File(filePath);
            lnrR = new LineNumberReader(new FileReader(file));
            try {
                lnrR.skip(Long.MAX_VALUE);
            } catch (IOException ex) {
                Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
            }
            int retorno = lnrR.getLineNumber();
            int REs = retorno - 4;
            String rere = Integer.toString(REs);
            txT_Total.setText(rere);
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                lnrR.close();
            } catch (IOException ex) {
                Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
       
        







       
        
        
       
        //COREÇÃO DE TABELA 
   /* String filePath = ("C:\\Arquivos do programa/Texto.txt");
    File fie = new File(filePath);

    try {
        BufferedReader br = new BufferedReader(new FileReader(fie));
        String firstLine = br.readLine().trim();
        String[] columnsName = firstLine.split(",");
        DefaultTableModel model = (DefaultTableModel)jtTabelaP.getModel();
        //model.setColumnIdentifiers(columnsName);
        
        Object[] tableLines = br.lines().toArray();
        
        for(int i = 0; 1 < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model.addRow(dataRow);
            }

        } catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }    */
      
    }//GEN-LAST:event_formWindowOpened

    private void jButtonNegocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNegocioActionPerformed
//if (!Chamar_Fornecedor6.isVisible()) { Chamar_Fornecedor6.setVisible(true); }
        MeuNegocio Tela = new MeuNegocio();
        Tela.setVisible(rootPaneCheckingEnabled); 
       // dispose();
  //   jFrame1.setVisible(rootPaneCheckingEnabled); 
     
     
    }//GEN-LAST:event_jButtonNegocioActionPerformed

    private void jtTabelaPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTabelaPMouseClicked
              
        
        
        
      // Captura o ID
      //JOptionPane.showMessageDialog(null, "foi clicado 2 veses!");
    
         



        //Pelfil DO CLIENTE    
        PerfilDoCliente frm2 = new PerfilDoCliente();
        /*
 try {
			//abre o arquivo
			FileReader fr = new FileReader("Texto.txt");
			BufferedReader br = new BufferedReader(fr);
			String temp;
			//A cada interação, é uma linha do arquivo e atribui-a a temp
			while ((temp = br.readLine()) != null)
			{
				//Aqui gera a sua "lista". No caso, imprimi cada linha na tela.
				String[] a = temp.split("/");
				int i=0;
				for(String each : a)
				{
					/*if(i==0){
						nome=each;							
						System.out.println(nome);
					}*/
						/*if(i==1){
							Nome=each;
                                                        
							System.out.println(Nome);
                                                       // frm2.txT_Nome.setText(Nome);
						} /*
						if(i==2){
							valor=each;
							i=-1;
							System.out.println(valor);
                                                        
						}*/
						/*i++;
					}						
				}
		}
		catch (FileNotFoundException el)
		{
			System.out.println("Arquivo não Encontrado!");
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}*/
        
        
        
        
        
             TableModel model1 = jTable1.getModel(); 
     // TableModel model3 = jTextField8.getModel();
      int indexs[] = jTable2.getSelectedRows();
      
      
     // frm2.txT_Nome.setText();
       
      frm2.txt_CodigoUSUARIO.setText(jtTabelaP.getModel().getValueAt(jtTabelaP.getSelectedRow(),0).toString()); //codigo
      frm2.txT_NomeUSUARIO.setText(jtTabelaP.getModel().getValueAt(jtTabelaP.getSelectedRow(),1).toString()); //Nome
      frm2.txT_EnderecoUSUARIO.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),5).toString()); //Endereço
      frm2.txT_NumeroUSUARIO.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),7).toString()); //Numero
      frm2.txT_BairroUSUARIO.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),6).toString()); //Bairro
      frm2.txT_dataUSUARIO.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),2).toString()); //Data
      frm2.txT_AniversarioUSUARIO.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),8).toString()); //Aniversario
      frm2.txT_EmailUSUARIO.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),9).toString()); //Email
      frm2.txT_whatsUSUARIO1.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),10).toString()); //WhatsApp
      frm2.txT_CelularUSUARIO2.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),11).toString()); //Celular
      frm2.txT_ObiservacoesUSUARIO1.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),12).toString()); // Obiservaçoes
      frm2.txt_CidadeUSUARIO.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),13).toString()); // cidade
      
     //string que vai ser apgada ao aperta o botão de sauvar alteraçoes
      frm2.txt_Nome.setText(jtTabelaP.getModel().getValueAt(jtTabelaP.getSelectedRow(),1).toString()); //Nome
      frm2.txt_pedidos.setText(jtTabelaP.getModel().getValueAt(jtTabelaP.getSelectedRow(),3).toString()); //pedido
      frm2.txt_valorTotal.setText(jtTabelaP.getModel().getValueAt(jtTabelaP.getSelectedRow(),4).toString()); //valor total
      frm2.txt_Rua.setText(jtTabelaP.getModel().getValueAt(jtTabelaP.getSelectedRow(),5).toString()); //Rua
      frm2.txt_Endereco.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),6).toString()); //Endereço
      frm2.txt_Numero.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),2).toString()); //Numero
      frm2.txt_Bairro.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),7).toString()); //Bairro
      frm2.txt_data.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),7).toString()); //Data
      frm2.Txt_Aniversario.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),8).toString()); //Aniversario
      frm2.txt_email.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),9).toString()); //Email
      frm2.txt_whats.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),10).toString()); //WhatsApp
      frm2.txt_celular.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),11).toString()); //Celular
      frm2.txt_obiservasoes.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),12).toString()); // Obiservaçoes
      frm2.txt_cidade.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),13).toString()); //controle cidade
      frm2.txt_cidade.setText(jTable5.getModel().getValueAt(jtTabelaP.getSelectedRow(),14).toString()); //foto
     
      
      
    /*  
      txt_controle.setText(jTable2.getModel().getValueAt(jTable2.getSelectedRow(),1).toString()); //controle Nome
      tex_controle_2.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),5).toString()); //controle Endereço
      jTextField1.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),7).toString()); //controle Numero
      jTextField2.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),6).toString()); //controle Bairro
      jTextField3.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),2).toString()); // controle Data
      jTextField4.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),8).toString()); // controle Aniversario
      jTextField5.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),9).toString()); // CONTROLE EMAIL
      jTextField6.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),10).toString()); //controle whats
      jTextField7.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),11).toString()); // controle celular
      jTextField8.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),12).toString()); // controle Obiservaçoes
      jTextField9.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),13).toString()); //controle cidade
      */
      
      
      
      // frm2.txT_whatsUSUARIO1.setText.(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),13).toString());
//      frm2.txT_Numero.setText(jTable1.getModel().getValueAt(jTable2.getSelectedRow(),13).toString());
      
      
      
      
      
      Object[] row = new Object[2];
     
     // PerfilDoCliente frm2 = new PerfilDoCliente();
      //DefaultTableModel mode13 = (DefaultTableModel)frm2.jtTabelaNome.getModel();
      //DefaultTableModel model4 = (DefaultTableModel)frm2.jtTabelaData.getModel();
      //DefaultTableModel model5 = (DefaultTableModel)frm2.jtTabelaEndereço.getModel();
     // DefaultTableModel model6 = (DefaultTableModel)frm2.jtTabelaNumero.getModel();
     // DefaultTableModel model7 = (DefaultTableModel)frm2.jtTabelaBairro.getModel();
     // DefaultTableModel model8 = (DefaultTableModel)frm2.jtTabelaAniversario.getModel();
    //  DefaultTableModel model9 = (DefaultTableModel)frm2.jtTabelaEmail.getModel();
      //DefaultTableModel model10 = (DefaultTableModel)frm2.jtTabelaWhatsApp.getModel();
     // DefaultTableModel model11 = (DefaultTableModel)frm2.jtTabelaCelular.getModel();
      //DefaultTableModel model12 = (DefaultTableModel)frm2.jtTabelaObiservaçoes.getModel();
      
     // for(int i = 0; i < indexs.length; i++)
     // {
       //row[0] = model1.getValueAt(indexs[i], 1); // Nome
      // mode13.addRow(row);
       
       
       
      // row[0] = model1.getValueAt(indexs[i], 2); // Data 
     //  model4.addRow(row);

       //row[0] = model1.getValueAt(indexs[i], 5); // Endereço
      // model5.addRow(row);
       
      // row[0] = model1.getValueAt(indexs[i], 6); //Numero
       //model7.addRow(row);
       
       //ow[0] = model1.getValueAt(indexs[i], 7); //Bairro
      // model6.addRow(row);
       
       //row[0] = model1.getValueAt(indexs[i], 8); //Aniversario 
      // model8.addRow(row);
       
      // row[0] = model1.getValueAt(indexs[i], 9);//Emaill
       //model9.addRow(row);
       
       //row[0] = model1.getValueAt(indexs[i], 10);//WhatsApp
       //model10.addRow(row);
       
       //row[0] = model1.getValueAt(indexs[i], 11); //Celular
       //model11.addRow(row);
       
       //row[0] = model1.getValueAt(indexs[i], 12); // Obiservaçoes
      // model12.addRow(row);
       
     // }
      
      frm2.setVisible(true); 

        
    }//GEN-LAST:event_jtTabelaPMouseClicked

    private void jTextproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextproActionPerformed
        

    }//GEN-LAST:event_jTextproActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      DefaultTableModel model = (DefaultTableModel)jtTabelaP.getModel();
      TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
      jtTabelaP.setRowSorter(tr);
      tr.setRowFilter(RowFilter.regexFilter(jTextpro.getText().trim()));
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
if (!Chamar_Fornecedor3.isVisible()) { Chamar_Fornecedor3.setVisible(true); }  
        //       TelaRelatorioCistema Tela = new TelaRelatorioCistema();
      //  Tela.setVisible(rootPaneCheckingEnabled); 
        
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
if (!Chamar_Fornecedor4.isVisible()) { Chamar_Fornecedor4.setVisible(true); }

       // frm_GuardarDados Tela = new frm_GuardarDados();
    //    Tela.setVisible(rootPaneCheckingEnabled);
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
try {
             String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/ValorTotal.txt");
        File file = new File(filePath);
            
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
        //    DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
          //  model.setColumnIdentifiers(columnsName);
            
              
            Object[] tableLines = br.lines().toArray();
            //model.addRow(tableLines);
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(";");
                
                 }
            
        } catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

//metodo de caucular o total
          calcular();     
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseMoved
  String filePathr = ("C:\\Arquivos de Programas/Gestão de Clientes/faturamentoDia.txt");
        File fillle = new File(filePathr);
        
        LineNumberReader lnr = null;
        try {
            
            File file = new File(filePathr);
            lnr = new LineNumberReader(new FileReader(file));
            try {
                lnr.skip(Long.MAX_VALUE);
            } catch (IOException ex) {
                Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
            }
            int retorno = lnr.getLineNumber();
            int REs = retorno - 0;
            String rere = Integer.toString(REs);
            jLabel20.setText(rere);
            
            
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
        }



        
        
        
        
        while (jtTabelaP.getModel().getRowCount() > 0) {
    ((DefaultTableModel) jtTabelaP.getModel()).removeRow(0);
    }
        
      String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/Texto.txt");
        File fille = new File(filePath);
        //tabela 1
        try {
            BufferedReader br = new BufferedReader(new FileReader(fille));
            String firstLine = br.readLine();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model00 = (DefaultTableModel)jtTabelaP.getModel();
            //model00.setColumnIdentifiers(columnsName);
            
            Object[] tableLines = br.lines().toArray();

            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model00.addRow(dataRow);
            }
            
        } catch (Exception ex) {
           Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex); 
        }
        // tabela 2

        try {
            BufferedReader br = new BufferedReader(new FileReader(fille));
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)jTable5.getModel();
            model.setColumnIdentifiers(columnsName);
            
            

            
            Object[] tableLines = br.lines().toArray();
            //model.addRow(tableLines);
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model.addRow(dataRow);


            }
            
        } catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    
    
         //tOTAL DE CLIENTES
        LineNumberReader lnrR = null;
        try {
            
            File file = new File(filePath);
            lnrR = new LineNumberReader(new FileReader(file));
            try {
                lnrR.skip(Long.MAX_VALUE);
            } catch (IOException ex) {
                Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
            }
            int retorno = lnrR.getLineNumber();
            int REs = retorno - 4;
            String rere = Integer.toString(REs);
            txT_Total.setText(rere);
            
            
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                lnrR.close();
            } catch (IOException ex) {
                Logger.getLogger(TelaRelatorioCistema.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        //metodo de caucular o total
          calcular();
        
        
    }//GEN-LAST:event_jLabel1MouseMoved

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
JFCadrastro Tela = new JFCadrastro();
        Tela.setVisible(rootPaneCheckingEnabled);   

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        //Apga as o arquivo txt

        File filee = new File("C:\\Arquivos de Programas/Gestão de Clientes/DadosObitidosDia.txt");

        if ( filee.exists()) {
            filee.delete();
            try {
                FileWriter fw = new FileWriter( "C:\\Arquivos de Programas/Gestão de Clientes/DadosObitidosDia.txt" );
            } catch (IOException ex) {
                Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            //Cria utro arquivo txt
            try {
                filee.createNewFile();
                PrintWriter pw = new PrintWriter(filee);
                pw.println("valores,");
                pw.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        while (jTable3.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTable3.getModel()).removeRow(0);
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
while (jTable1.getModel().getRowCount() > 0) {
    ((DefaultTableModel) jTable1.getModel()).removeRow(0);
    }

//Faturamento dia 
//jLabel9.setText("Faturamento total");
        try {
             String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/textando.txt");
        File file = new File(filePath);
            
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
           String[] columnsName = firstLine.split(",");
         //   DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
          //  model.setColumnIdentifiers(columnsName);

            Object[] tableLines = br.lines().toArray();
            //model.addRow(tableLines);
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataMax = line.split(";");
                //String[] dataRow = line.split(";");
           //     model.addRow(dataRow);
                
   
               
        //metodo para percorrer o array
        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        
        jLabel8.setText(formato.format(dataSistema));
        String DataHoje = jLabel8.getText();
        String quebrador ="";
        int posisao = 0;
                for (int j = 0; j < dataMax.length; j++) {
                    String  linha = dataMax[posisao];
                    //Metodo para aparecer so o valor
                    if(linha.toLowerCase().contains(DataHoje.toLowerCase()) == true){
                        System.out.println(linha+"Contem a data de hoje"); 
                    
                       
                                               
                    linha.trim();
                    System.out.println(linha);
                    //Metodo de formataçao de String
                    String space = " ";
                    if(linha.toLowerCase().contains(space.toLowerCase()) == true){
                        //Metodo quebra Strig
                    String a = linha;
	            String[] array = a.split(" ");
	            for (int ij = 0; ij < array.length; ij++){
		    System.out.println(array[0]);//Valor
                    
                       
                        
                       
	}
                     
        
                        
                    
                    
                    DefaultTableModel val = (DefaultTableModel) jTable1.getModel();
                        val.addRow(new String[]{array[0]} );
                    
                    }
                    
                    }
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        faturamentoDia();












        // TODO add your handling code here:
        
	try {
             String filePath = ("C:\\Arquivos de Programas/Gestão de Clientes/faturamentoDia.txt");
        File file = new File(filePath);
            
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
         //   DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
          //  model.setColumnIdentifiers(columnsName);

            Object[] tableLines = br.lines().toArray();
            //model.addRow(tableLines);
            
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataMax = line.split(";");
                //String[] dataRow = line.split(";");
           //     model.addRow(dataRow);
                
   
               
        //metodo para percorrer o array
        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        jLabel18.setText(formato.format(dataSistema));
        String DataHoje = jLabel18.getText();
        int posisao = 0;
                for (int j = 0; j < dataMax.length; j++) {
                    String  linha = dataMax[posisao];
                    //metodo para aparecer so o valor
                    if(linha.toLowerCase().contains(DataHoje.toLowerCase()) == true){
                        System.out.println(linha+"Contem a data de hoje");
                        String resultado = "";

		                                 Scanner sc = new Scanner(linha);
                                                 //  Scanner 

	                                   	while (sc.hasNext()) {

	                               		resultado += sc.next();
	                                		break;

		                                   }
                                              
		                               System.out.println(""+resultado );
                                               resultado.trim();
                    
                        
                        
                        
               
                    
                    
                    DefaultTableModel val = (DefaultTableModel) jTable4.getModel();
                    val.addRow(new String[]{resultado});
                    //calcula os valores na tabela
                     calcular();
                    }else{
                     System.out.println(linha+"Nã Contem a data de hoje");
                    }
                    
                    
                    
                    posisao ++;
                    System.out.println(""+posisao);
                    System.out.println(linha);
                }
        
                
               
            }
        } catch (Exception ex) {
            Logger.getLogger(PaginaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }         

 
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jTextproKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextproKeyPressed
      if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        DefaultTableModel model = (DefaultTableModel)jtTabelaP.getModel();
      TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
      jtTabelaP.setRowSorter(tr);
      tr.setRowFilter(RowFilter.regexFilter(jTextpro.getText().trim()));
       }
    }//GEN-LAST:event_jTextproKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    /*    int  opisao = JOptionPane.showConfirmDialog(null, "Você realmente quer sair do programa?", "Atenção", JOptionPane.YES_OPTION);
      
        if(opisao == JOptionPane.YES_OPTION){
    System.exit(0);
    }else{
        repaint();
        
        }
*/

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TxT_Pedididos;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonNegocio;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCadastro;
    private javax.swing.JMenu jMenuFerramentas;
    private javax.swing.JMenuItem jMenuItemCadUsuario;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemTelaBemVindo;
    private javax.swing.JMenu jMenuRelatorios;
    private javax.swing.JMenu jMenuSair;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextpro;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel jldata;
    private javax.swing.JLabel jlhora;
    private javax.swing.JTable jtTabelaP;
    private javax.swing.JLabel txT_Faturamento;
    private javax.swing.JLabel txT_Total;
    // End of variables declaration//GEN-END:variables

    private String[] String(String Pesquisar) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
